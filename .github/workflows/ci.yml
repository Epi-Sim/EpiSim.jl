name: CI

on:
  push:
    branches: [ main, master, develop, docker ]
  pull_request:
    branches: [ main, master, develop, docker ]

jobs:
  docker-build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t episim-validation .
    
    - name: Run Docker verification script
      run: |
        chmod +x verify_docker.sh
        ./verify_docker.sh
    
    - name: Run Python tests in Docker
      run: |
        docker run --rm \
          -v $(pwd):/workspace \
          -v $(pwd)/models/mitma:/data \
          -w /workspace \
          episim-validation \
          bash -c "cd python && uv run pytest tests/ -v --cov=episim_python --cov-report=xml --cov-report=term"
    
    - name: Upload Python coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./python/coverage.xml
        flags: python
        name: python-coverage
        fail_ci_if_error: false
    
    - name: Run Julia tests in Docker
      run: |
        docker run --rm \
          -v $(pwd):/workspace \
          -v $(pwd)/models/mitma:/data \
          -w /workspace \
          episim-validation \
          julia --project=. test/runtests.jl
    
    - name: Run Python code quality checks
      run: |
        docker run --rm \
          -v $(pwd):/workspace \
          -w /workspace \
          episim-validation \
          bash -c "cd python && uv run ruff check . && uv run ruff format --check ."

  integration-test:
    runs-on: ubuntu-latest
    needs: docker-build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t episim-validation .
    
    - name: Run integration tests
      run: |
        docker run --rm \
          -v $(pwd):/workspace \
          -v $(pwd)/models/mitma:/data \
          -w /workspace \
          episim-validation \
          bash -c "cd python && uv run pytest tests/test_integration.py -v"

  docker-security-scan:
    runs-on: ubuntu-latest
    needs: docker-build-and-test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t episim-validation .
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'episim-validation'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  julia-native-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Julia
      uses: julia-actions/setup-julia@v1
      with:
        version: '1.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libnetcdf-dev libhdf5-dev
    
    - name: Cache Julia packages
      uses: julia-actions/cache@v1
    
    - name: Install Julia dependencies
      run: |
        julia --project=. -e 'using Pkg; Pkg.instantiate(); Pkg.precompile()'
    
    - name: Run Julia tests
      run: |
        julia --project=. test/runtests.jl